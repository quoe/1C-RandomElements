
// КучеровРМ 25.03.2020 
&НаКлиенте
Процедура СоздатьСлучайный(Команда)
	
	СоздатьСлучайныйНаСервере(КоличествоСоздаваемых);
	
КонецПроцедуры

// КучеровРМ 25.03.2020 
&НаСервере
Функция ПреобразоватьТабличныйДокументВТаблицуЗначений(ТабДокумент)
	
	ПоследняяСтрока 	= ТабДокумент.ВысотаТаблицы;
	ПоследняяКолонка 	= ТабДокумент.ШиринаТаблицы;
	ОбластьЯчеек 		= ТабДокумент.Область(1, 1, ПоследняяСтрока, ПоследняяКолонка); 
	// Создаем описание источника данных на основании области ячеек табличного документа.
	ИсточникДанных 		= Новый ОписаниеИсточникаДанных(ОбластьЯчеек);  
	// Создаем объект для интеллектуального построения отчетов,
	// указываем источник данных и выполняем построение отчета.
	ПостроительОтчета 	= Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных 	= ИсточникДанных;
	ПостроительОтчета.Выполнить();
	// Результат выгружаем в таблицу значений.
	ТабЗначений 		= ПостроительОтчета.Результат.Выгрузить();
	
	Возврат ТабЗначений;
	
КонецФункции

// КучеровРМ 25.03.2020 
Функция ПолучитьСлучайнуюСтроку(пГСЧ = Неопределено, лКолСимволов = 1)
	
	Если пГСЧ = Неопределено Тогда
		лГСЧ 	= Новый ГенераторСлучайныхЧисел();
	Иначе
		лГСЧ 	= пГСЧ;
	КонецЕсли; 
	
	лСлучайнаяСтрока = "";
	Для Сч = 1 По лКолСимволов Цикл
		
		лСлучЧисло = лГСЧ.СлучайноеЧисло(0, 2) ;
		
		Если лСлучЧисло = 0 Тогда
			лСлучайнаяСтрока 	= лСлучайнаяСтрока + Символ(лГСЧ.СлучайноеЧисло(32, 126)); // Символ 32 - пробел, цифры, знаки, англ буквы
		ИначеЕсли лСлучЧисло = 1 Тогда
			лСлучайнаяСтрока 	= лСлучайнаяСтрока + Символ(лГСЧ.СлучайноеЧисло(1073, 1103)); // строчная кириллица
		Иначе
			лСлучайнаяСтрока 	= лСлучайнаяСтрока + Символ(лГСЧ.СлучайноеЧисло(1040, 1072)); // прописная кириллица
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат лСлучайнаяСтрока;
	
КонецФункции // ПолучитьСлучайнуюСтроку()

//+++ КучеровРМ 25.03.2020
&НаСервере
Функция ПолучитьСлучайноеСлово(пГСЧ = Неопределено, пТаблицаСлов, пПерваяЗаглавная = Ложь)
	
	Если пГСЧ = Неопределено Тогда
		лГСЧ 	= Новый ГенераторСлучайныхЧисел();
	Иначе
		лГСЧ 	= пГСЧ;
	КонецЕсли;
	
	лСлучайноеЧисло = лГСЧ.СлучайноеЧисло(0, пТаблицаСлов.Количество() - 1); 
	лСлучЭлем 		= пТаблицаСлов[лСлучайноеЧисло].Слово;
	
	лСлучЭлем 		= СокрЛП(лСлучЭлем);
	
	Если пПерваяЗаглавная Тогда
		лСлучЭлем 	= ТРег(лСлучЭлем);
	КонецЕсли; 
	
	Возврат лСлучЭлем;
	
КонецФункции // ПолучитьСлучайноеСлово() //--- КучеровРМ 25.03.2020

Функция ЧетноеЧисло(пЧисло)    
	Четное = пЧисло%2 = 0;
	Возврат Четное;    
КонецФункции  

//+++ КучеровРМ 25.03.2020
&НаСервере
Функция ПолучитьСлучайноеНаименование(пГСЧ, пДлинаСлучайныхСимволов = 5, пТабСущ = Неопределено)
	
	Если пГСЧ = Неопределено Тогда
		лГСЧ 	= Новый ГенераторСлучайныхЧисел();
	Иначе
		лГСЧ 	= пГСЧ;
	КонецЕсли;
	
	лСлово 		= "";
	
	Если пТабСущ <> Неопределено Тогда
		лСлово 	= ПолучитьСлучайноеСлово(лГСЧ, пТабСущ, Истина) + " ";
		Если ЧетноеЧисло(Секунда(ТекущаяДата())) Тогда
			лСлово 	= лСлово + ПолучитьСлучайноеСлово(лГСЧ, пТабСущ, Истина) + " ";	
		КонецЕсли;
	КонецЕсли; 
	
	лНаименование = лСлово + ПолучитьСлучайнуюСтроку(лГСЧ, пДлинаСлучайныхСимволов);
	
	Возврат лНаименование;
	
КонецФункции // ПолучитьСлучайноеНаименование() //--- КучеровРМ 25.03.2020
 
//+++ КучеровРМ 25.03.2020
&НаСервере
Функция СоздатьСлучайныйОбъект(пГСЧ = Неопределено, пМетаданныеИмя, пТабСущ = Неопределено, пПолноеИмяМетаданных = "", пЗаполняяПростыеТипы = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	лРезультат 	= Неопределено;
	
	Если пГСЧ = Неопределено Тогда
		лГСЧ 	= Новый ГенераторСлучайныхЧисел();
	Иначе
		лГСЧ 	= пГСЧ;
	КонецЕсли;
	
	Если ПустаяСтрока(пПолноеИмяМетаданных) Тогда			   
		лОбъект = Справочники[пМетаданныеИмя].СоздатьЭлемент();
	ИначеЕсли СтрРазделить(пПолноеИмяМетаданных, ".", Ложь)[0] = "Справочник" Тогда
		лОбъект = Справочники[пМетаданныеИмя].СоздатьЭлемент();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	лОбъект.Наименование 	= ПрефиксНазвания + ПолучитьСлучайноеНаименование(лГСЧ, лГСЧ.СлучайноеЧисло(3, 5), пТабСущ);
	лОбъектВладелец 		= лОбъект.Владелец;
	
	Если лОбъектВладелец <> Неопределено Тогда //Т.е. необходимо указать владельца
		лСтрокаВладелец 	= лОбъектВладелец;
		лИмяВладелец 		= Метаданные.НайтиПоТипу(ТипЗнч(лСтрокаВладелец)).Имя;
		лПолноеИмяВладелец 	= Метаданные.НайтиПоТипу(ТипЗнч(лСтрокаВладелец)).ПолноеИмя();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Элементы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник." + лИмяВладелец + " КАК Элементы
		|ГДЕ НЕ Элементы.ПометкаУдаления";
		
		лТабл = Запрос.Выполнить().Выгрузить();
		
		Если лТабл.Количество() > 0 Тогда
			лСлучайноеЧисло 		= лГСЧ.СлучайноеЧисло(0, лТабл.Количество() - 1); 
			лТаблСлучЭлем 			= лТабл[лСлучайноеЧисло].Ссылка;
			лОбъект.Владелец 		= лТаблСлучЭлем;
		Иначе
			//Здесь можно зациклится если номенклатура будет создавать упаковку, а упаковка номенклатуру. Поэтому они должны иметь хотя бы по 1 элементу, чтобы их нашло запросом
			
			лВладелец 				= СоздатьСлучайныйОбъект(лГСЧ, лИмяВладелец, пТабСущ, лПолноеИмяВладелец, Истина);
			лОбъект.Владелец 		= лВладелец;	
		КонецЕсли; 
	КонецЕсли;
	
	лРеквизиты 		= лОбъект.Метаданные().Реквизиты;
	
	Для каждого лРеквизит из лРеквизиты цикл
		
		лРеквизитИмя 	= лРеквизит.Имя; 
		Если лРеквизитИмя = "Код" Тогда
			Продолжить;
		КонецЕсли;
		
		лСтрока = лОбъект[лРеквизитИмя];
		
		Если ТипЗнч(лСтрока) = Тип("Строка") Тогда
			лСтрока = ПолучитьСлучайноеНаименование(лГСЧ, лГСЧ.СлучайноеЧисло(3, 5), пТабСущ);
		ИначеЕсли ТипЗнч(лСтрока) = Тип("Число") Тогда
			лСтрока = лГСЧ.СлучайноеЧисло(0, 9999);
		ИначеЕсли ТипЗнч(лСтрока) = Тип("Дата") Тогда
			лДата 	= Дата(лГСЧ.СлучайноеЧисло(1900, 3000), лГСЧ.СлучайноеЧисло(1, 12), лГСЧ.СлучайноеЧисло(1, 30), лГСЧ.СлучайноеЧисло(0, 12), лГСЧ.СлучайноеЧисло(0, 59), лГСЧ.СлучайноеЧисло(0, 59));
			лСтрока = лДата;
		ИначеЕсли ТипЗнч(лСтрока) = Тип("Булево") Тогда     
			лСтрока = лГСЧ.СлучайноеЧисло(0, 1);
		//ИначеЕсли ТипЗнч(лСтрока) = Тип("Перечисление") Тогда
		ИначеЕсли НЕ пЗаполняяПростыеТипы И ТипЗнч(лСтрока) <> Тип("Неопределено") Тогда
			лИмя 		= Метаданные.НайтиПоТипу(ТипЗнч(лСтрока)).Имя;
			лПолноеИмя 	= Метаданные.НайтиПоТипу(ТипЗнч(лСтрока)).ПолноеИмя();
			Попытка
				
				лСтрока = СоздатьСлучайныйОбъект(лГСЧ, лИмя, пТабСущ, лПолноеИмя, Истина);
				
			Исключение
				лСтрока = Неопределено;
				лСообщениеОшибки 	= "При создании """ + лОбъект + """ (" + Строка(ТипЗнч(лОбъект)) + ", " + пПолноеИмяМетаданных + "). " + "Ошибка: " + ОписаниеОшибки();
				Сообщить(лСообщениеОшибки, СтатусСообщения.Важное);
			КонецПопытки; 
			
		КонецЕсли;
		
		лОбъект[лРеквизитИмя] = лСтрока;
		
	КонецЦикла;
	
	лОбъект.Записать();
	
	Возврат лОбъект.Ссылка;
	
КонецФункции // СоздатьСлучайныйОбъект() //--- КучеровРМ 25.03.2020
 
&НаСервере
Процедура СоздатьСлучайныйНаСервере(пКоличество = 1)

	лГСЧ 		= Новый ГенераторСлучайныхЧисел();
	
	лМакетСущ 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетСущ");
	лТабСущ 	= ПреобразоватьТабличныйДокументВТаблицуЗначений(лМакетСущ);

	Если ТаблицаВидыОбъектов.Количество() > 0 Тогда
		//ОтобратьОбъектыСервер();
		Для ии = 1 По пКоличество Цикл
			Для каждого ТаблицаВидыОбъектовСтрока Из ТаблицаВидыОбъектов Цикл
				
				Если ТаблицаВидыОбъектовСтрока.Пометка Тогда 
					лМетаданныеИмя 	= ТаблицаВидыОбъектовСтрока.Значение;
					
					Если ПропускатьОшибки Тогда
						Попытка
							
							лОбъектСсылка 			= СоздатьСлучайныйОбъект(лГСЧ, лМетаданныеИмя, лТабСущ);
							
							Сообщение 				= Новый СообщениеПользователю;
							Сообщение.Текст 		= "Создан элемент: " + лОбъектСсылка + " (" + Строка(ТипЗнч(лОбъектСсылка)) + ")";
							Сообщение.КлючДанных  	= лОбъектСсылка;
							Сообщение.Сообщить();
							
						Исключение
							лСообщение 	= "Ошибка на элементе " + лМетаданныеИмя + ": " + ОписаниеОшибки();
							Сообщить(лСообщение, СтатусСообщения.Важное);
						КонецПопытки;	
					Иначе
						лОбъектСсылка 			= СоздатьСлучайныйОбъект(лГСЧ, лМетаданныеИмя, лТабСущ);
						
						Сообщение 				= Новый СообщениеПользователю;
						Сообщение.Текст 		= "Создан элемент " + лМетаданныеИмя + ": " + лОбъектСсылка + " (" + Строка(ТипЗнч(лОбъектСсылка)) + ")";
						Сообщение.КлючДанных  	= лОбъектСсылка;
						Сообщение.Сообщить();	
					КонецЕсли;
						
				КонецЕсли;
				
			КонецЦикла;	
		КонецЦикла; 
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нужно выбрать хотя бы один объект метаданных";
		Сообщение.Поле = "ТаблицаВидыОбъектов";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоСоздаваемых = 1;
	
	МассивКлассовМетаданных = Новый Массив;
	МассивКлассовМетаданных.Добавить("Справочники");
	//МассивКлассовМетаданных.Добавить("Документы");
	//МассивКлассовМетаданных.Добавить("Отчеты");
	//МассивКлассовМетаданных.Добавить("Обработки");
	
	Для каждого КлассМетаданных Из МассивКлассовМетаданных Цикл 
		
		Для Каждого ОбъектМетаданных Из Метаданные[КлассМетаданных] Цикл
			лСтр 					= ТаблицаВидыОбъектов.Добавить();
			лСтр.Значение 			= ОбъектМетаданных.Имя;
			лСтр.КлассМетаданных 	= КлассМетаданных;
		КонецЦикла;    
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлагТаблицы(Таблица, ЗначениеФлага = Неопределено)
	
	лЕстьЗначениеФлага = ЗначениеФлага <> Неопределено;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		
		Если лЕстьЗначениеФлага Тогда
			СтрокаТаблицы.Пометка = ЗначениеФлага;
		Иначе
			СтрокаТаблицы.Пометка = НЕ СтрокаТаблицы.Пометка;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстановитьФлаги(Команда)
	
	УстановитьФлагТаблицы(ТаблицаВидыОбъектов, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСнятьФлаги(Команда)
	
	УстановитьФлагТаблицы(ТаблицаВидыОбъектов, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИнвертироватьФлаги(Команда)
	
	УстановитьФлагТаблицы(ТаблицаВидыОбъектов);
	
КонецПроцедуры

